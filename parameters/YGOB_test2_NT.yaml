# Parameters file to process YGOB data
version: 2

# Specific run parameters
run:
   # [required] Run name
   name: &run_name 'YGOB_test2_NT'
   # [optional] Directories
   dir:
      root:    &run_dir_root    '/home/chauvec/projects/ctb-chauvec/SPP-PIPELINE'
      scripts: &run_dir_scripts !join [*run_dir_root, 'scripts']
      data:    &run_dir_data    !join [*run_dir_root, 'data/YGOB']
      exp:     &run_dir_exp     !join ['/scratch/chauvec/SPP', *run_name]

# [required] Active data directories
dir:
   data:    &dir_data    !join [*run_dir_exp, 'data']
   aux:     &dir_aux     !join [*run_dir_exp, 'aux']
   log:     &dir_log     !join [*run_dir_exp, 'log']
   stats:   &dir_stats   !join [*run_dir_exp, 'statistics']
   results: &dir_results !join [*run_dir_exp, 'results']

# Data access
data:
   # [required] Path to species tree file in Newick format
   # [comment] Currently internal node labels, if any, are ignored
   species_tree:
      dir:   &data_species_tree_dir   !ref [*run_dir_data]
      name:  &data_species_tree_name  'species_tree.newick'
      path:  &data_species_tree_path  !join [*data_species_tree_dir, *data_species_tree_name]

   # [required] Path to file describing genes in each gene family
   # [format] One family per line
   # [format] <family ID><TAB><list of genes names separated by ' '>   
   families:
      dir:   &data_families_dir   !ref [*run_dir_data]
      name:  &data_families_name  'families.txt'
      path:  &data_families_path  !join [*data_families_dir, *data_families_name]
      
   # [required] Path to a file giving the path to gene order files per extant species
   # [format] One extant species per line
   # [format] <species name><TAB><path>
   gene_orders:
      dir:   &data_gene_orders_dir   !ref [*run_dir_data]
      name:  &data_gene_orders_name  'gene_orders.txt'
      path:  &data_gene_orders_path  !join [*data_gene_orders_dir, *data_gene_orders_name]

   # [optional] Path to a file giving the path to one unaligned FASTA file per family
   # [format] One family per line
   # [format] <family ID><TAB><path>
   sequences:
      dir:   &data_sequences_dir   !ref [*run_dir_data]
      name:  &data_sequences_name  'sequences.txt'
      path:  &data_sequences_path  !join [*data_sequences_dir, *data_sequences_name]

   # [optional] File giving the path to one aligned FASTA file per family
   # [format] One family per line
   # [format] <family ID><TAB><path>
   alignments:
      name:  &data_alignments_name   'alignments.txt'
      path:  &data_alignments_path   !join [*dir_data, *data_alignments_name]
      # Suffixes for nucleotides and amino-acids alignments files
      NT_ext: &data_alignments_NT_ext '_NT.fasta'
      AA_ext: &data_alignments_AA_ext '_AA.fasta'
      
   # [optional] Path to the file giving the path to one unreconciled gene tree file per family
   # [format] One family per line
   # [format] <family ID><TAB><path>
   # gene_trees: 
   #   name:  &data_gene_trees_name   'gene_trees.txt'
   #   path:  &data_gene_trees_path   !join [*dir_data, *data_gene_trees_name]

   # [optional] File giving the path to one reconciled gene tree file per family
   # [format] One family per line
   # [format] <family ID><TAB><path>
   reconciliations:
      name:  &data_reconciliations_name   'reconciliations.txt'
      path:  &data_reconciliations_path   !join [*dir_data, *data_reconciliations_name]
      ext:   &data_reconciliations_ext    '.recphyloxml'

   # [optional] File giving the path to one adjacency file per species, extant and ancestral
   # [format] One species per line
   # [format] <species name><TAB><path>
   adjacencies:
      name:  &data_adjacencies_name   'adjacencies.txt'
      path:  &data_adjacencies_path   !join [*dir_data, *data_adjacencies_name]

   # Assumptions:
   # - exactly one of data.sequences, data.alignments, data.gene_trees, data.reconciliations
   #   data.adjacencies is provided as starting data, all others will be in *dir_data
   # - species names in data.gene_orders do match leaves of data.species_tree
   # - extant species names in data.adjacencies do match leaves of data.species_tree
   # - genes in data.gene_orders do match genes in data.families
   # - gene in FASTA files from data.sequences do match genes in data.families
   # - families in data.sequences do match families in data.families
   # - gene sequences FASTA header of the form ">gene_name\n"


# Global SLURM parameters
slurm:
   # [required] Default account
   account: &slurm_account 'def-chauvec'

# LOG files
log:
   # [required] Files extensions for log, error and stats files
   ext:
      log:  &log_ext_log  'log'
      err:  &log_ext_err  'err'
      stat: &log_ext_stat 'csv'
   # [required] Messages displayed in log/error files
   msg:
      success: &log_msg_success 'SUCCESS'
      error:   &log_msg_error   'ERROR'
      warning: &log_msg_warning 'WARNING'
      missing: &log_msg_missing 'file is missing'

# Tools used in the pipeline
tools:
   # MACSE: multiple sequences alignment
   MACSE:
      # [required] Name of the tool used in directories and log file names
      name: &macse_name 'MACSE'
      # [required] Input and output properties
      input:
         # [required] Input file to MACSE giving paths to sequence files
         file: &macse_input_file !ref [*data_sequences_path]
      output:
         # [required] Dir/file where MACSE alignments are stored
         dir:  &macse_output_dir  !join [*dir_results, *macse_name]
         file: &macse_output_file !ref [*data_alignments_path]
      slurm:
         # [required] Slurm options; might be empty
         options: &macse_slurm_options ['--mem=8G', '--time=02:00:00']
         # [optional] macse runs through a job array indexed by families
         array:
            # [required] 'input' block with fields for 'file', 'field', 'var' in this order
            input:
               file:  &macse_slurm_array_input_file  !ref [*macse_input_file]
               field: &macse_slurm_array_input_field 2
               var:   &macse_slurm_array_input_var   'SEQ_FILE'
            # [optional] Blocks with same structure than 'input' block
            results:
               file:  &macse_slurm_array_results_file  !ref [*macse_input_file]
               field: &macse_slurm_array_results_field 1
               var:   &macse_slurm_array_results_var   'FAM_ID'
               ext:   &macse_slurm_array_results_ext   !ref [*data_alignments_NT_ext]
         # [required] List of expected results files
         # If based on an array, uses tools.MACSE.slurm.array.output variables
         results:
            files:
                - &macse_slurm_results_file_1 !join [
                     *macse_output_dir,
                     !concat ['${', *macse_slurm_array_results_var, '}', *data_alignments_NT_ext]
                  ]
                - &macse_slurm_results_file_2 !join [
                     *macse_output_dir,
                     !concat ['${', *macse_slurm_array_results_var, '}', *data_alignments_AA_ext]
                  ]
         # [required] List of modules to load; might be empty
         modules: ['java']
         # [required] Command to be run in Slurm script
         cmd:
            - 'java -jar /home/chauvec/projects/ctb-chauvec/SPP-PIPELINE/bin/macse_v2.06.jar \'
            - '   -prog alignSequences \'
            - !concat ['   -seq ${', *macse_slurm_array_input_var, '} \']
            - !concat ['   -out_NT ', *macse_slurm_results_file_1, ' \']
            - !concat ['   -out_AA ', *macse_slurm_results_file_2]

   # GeneRax: computing reconciled gene trees
   GeneRax:
      name: &generax_name 'GeneRax'
      input:
         dir:    &generax_input_dir  !join [*dir_aux, *generax_name]
         file:   &generax_input_file !join [*generax_input_dir, 'families.txt']
         script:
            - !join [*run_dir_scripts, 'GeneRax_create_input_files.py']
            - !ref [*data_families_path]
            - !ref [*data_gene_orders_path]
            - !ref [*data_alignments_path]
            - !ref [*data_alignments_NT_ext]
            - 'GTR+G'
            - !ref [*generax_input_file]
            - !ref [*generax_input_dir]
      output:
         dir:   &generax_output_dir  !join [*dir_results, *generax_name]
         file:  &generax_output_file !ref [*data_reconciliations_path]
      slurm:
         array:
            results:
               file:  &generax_slurm_array_results_file  !ref [*data_alignments_path]
               field: &generax_slurm_array_results_field 1
               var:   &generax_slurm_array_results_var   'FAM_ID'
         results:
            files: 
                - &generax_slurm_results_file !join [
                     *generax_output_dir, 'reconciliations',
                     !concat ['${', *generax_slurm_array_results_var, '}', *data_reconciliations_ext]
                  ]
            other:
                - &generax_slurm_results_species_tree !join [
                     *generax_output_dir, 'species_trees', 'starting_species_tree.newick'
                  ]
         options: &generax_slurm_options ['--mem-per-cpu=4G', '--time=12:00:00', '--ntasks=100']
         modules: []
         cmd:
            - 'mpiexec -np 48 /home/chauvec/projects/ctb-chauvec/SPP-PIPELINE/bin/GeneRax/build/bin/generax \'
            - !concat ['   -f ', *generax_input_file, ' \']
            - !concat ['   -s ', *data_species_tree_path, ' \']
            - !concat ['   -p ', *generax_output_dir, ' \']
            - '   --per-family-rates --si-quartet-support \'
            - '   --seed 123 \'
            - '   --rec-model UndatedDL \'
            - '   --strategy SPR'
            - ' '
            - !concat [!join [*run_dir_scripts, 'recPhyloXML_reformat.py'], ' \']
            - !concat ['   ', *generax_input_file, ' \']
            - !concat ['   ', *generax_output_dir, ' \']
            - !concat ['   ', *data_reconciliations_ext]
      stats:
         files:
            - &generax_stats_file  !join [*dir_stats, *generax_name, !concat [*generax_name, '.', *log_ext_stat]]
         cmd:
            - !join [*run_dir_scripts, 'recPhyloXML_statistics.py']
            - !ref [*generax_output_file]
            - !ref [*generax_stats_file]

   # DeCoSTAR: computing ancestral adjacencies
   DeCoSTAR:
      name: &decostar_name 'DeCoSTAR'
      input:
         dir:  &decostar_input_dir !join [*dir_aux, *decostar_name]
         file:
           - &decostar_input_file_trees       !join [*decostar_input_dir, 'gene_trees.txt']
           - &decostar_input_file_adjacencies !join [*decostar_input_dir, 'adjacencies.txt']
         script:
            - !join [*run_dir_scripts, 'DeCoSTAR_create_input_files.py']
            - !ref [*data_gene_orders_path]
            - !ref [*data_reconciliations_path]
            - !ref [*data_families_path]
            - !ref [*decostar_input_file_adjacencies]
            - !ref [*decostar_input_file_trees]
      output:
         dir:  &decostar_output_dir  !join [*dir_results, *decostar_name]
         file: &decostar_output_file !join [*dir_results, *decostar_name, 'dummy.txt']
      slurm:
         options: &decostar_options ['--mem=4G', '--time=24:00:00']
         results:
            files:
                - &decostar_slurm_results_adjacencies_file !join [*decostar_output_dir, 'adjacencies.txt']
                - &decostar_slurm_results_genes_file_1     !join [*decostar_output_dir, 'genes.txt']
                - &decostar_slurm_results_genes_file_2     !join [*decostar_output_dir, 'genes_reformatted.txt']
                - &decostar_slurm_results_species_file     !join [*decostar_output_dir, 'species.txt']
                - !ref [*data_adjacencies_path]
         modules: []
         cmd:
            - '/home/chauvec/projects/ctb-chauvec/SPP-PIPELINE/bin/DeCoSTAR \'
            - !concat ['   species.file=', *generax_slurm_results_species_tree, ' \']
            - !concat ['   adjacencies.file=', *decostar_input_file_adjacencies, ' \']
            - !concat ['   gene.distribution.file=', *decostar_input_file_trees, ' \']
            - !concat ['   output.dir=', *decostar_output_dir, ' \']
            - '   write.newick=true \'
            - '   write.adjacencies=true \'
            - '   write.genes=true \'
            - '   already.reconciled=true \'
            - '   use.boltzmann=true \'
            - '   boltzmann.temperature=0.1 \'
            - '   nb.sample=1000 \'
            - '   dated.species.tree=false \'
            - '   rooted=true \'
            - '   with.transfer=false \'
            - '   verbose=2'
            - ' '
            - !concat [!join [*run_dir_scripts, 'DeCoSTAR_reformat.py'], ' \']
            - !concat ['   ', *generax_slurm_results_species_tree, ' \']
            - !concat ['   ', *decostar_slurm_results_species_file, ' \']
            - !concat ['   ', *data_families_path, ' \']
            - !concat ['   ', *data_reconciliations_path, ' \']
            - !concat ['   ', *decostar_slurm_results_genes_file_1, ' \']
            - !concat ['   ', *decostar_slurm_results_adjacencies_file, ' \']
            - !concat ['   ', *decostar_slurm_results_genes_file_2, ' \']
            - !concat ['   ', *data_adjacencies_path, ' \']
            - !concat ['   ', *decostar_output_dir]
      stats:
         files:
            - &decostar_stats_file  !join [*dir_stats, *decostar_name, !concat [*decostar_name, '.', *log_ext_stat]]
         cmd:
            - !join [*run_dir_scripts, 'DeCoSTAR_statistics.py']
            - !ref [*generax_slurm_results_species_tree]
            - !ref [*decostar_slurm_results_species_file]
            - !ref [*decostar_slurm_results_genes_file_2]
            - !ref [*data_adjacencies_path]
            - "0.5 0.6 0.7 0.8 0.9 1.0"
            - !ref [*decostar_stats_file]

   # SPPDCJ_ILP: Writing the SPPDCJ ILP file
   SPPDCJ_ILP:
      name: &sppdcj_ilp_name 'SPPDCJ_ILP'
      input:
         dir:  &sppdcj_ilp_input_dir !join [*dir_aux, *sppdcj_ilp_name]
         file:
           - &sppdcj_ilp_input_file_species_tree !join [*sppdcj_ilp_input_dir, 'species_tree.txt']
           - &sppdcj_ilp_input_file_adjacencies  !join [*sppdcj_ilp_input_dir, 'adjacencies.txt']
         threshold: &sppdcj_ilp_input_threshold  '0.75'
         beta:      &sppdcj_ilp_input_beta       '0.25'
         script:
            - !join [*run_dir_scripts, 'SPPDCJ_create_input_files.py']
            - !ref [*data_adjacencies_path]
            - !ref [*generax_slurm_results_species_tree]
            - !ref [*sppdcj_ilp_input_threshold]
            - !ref [*sppdcj_ilp_input_file_species_tree]
            - !ref [*sppdcj_ilp_input_file_adjacencies]
      output:
         dir:  &sppdcj_ilp_output_dir  !join [*dir_results, *sppdcj_ilp_name]
         file: &sppdcj_ilp_output_file !join [
                  *sppdcj_ilp_output_dir,
                  !concat [*run_name, '_idmap_', *sppdcj_ilp_input_threshold, '_', *sppdcj_ilp_input_beta, '.txt']
               ]
      slurm:
         options: &sppdcj_ilp_options ['--mem=256G', '--time=24:00:00']
         results:
            files:
                - !ref [*sppdcj_ilp_output_file]
         modules: []
         cmd:
            - '/home/chauvec/projects/ctb-chauvec/SPP-PIPELINE/bin/spp_dcj/scripts/spp_dcj.py \'
            - !concat ['   -m ', *sppdcj_ilp_output_file, ' \']
            - !concat ['   -a ', *sppdcj_ilp_input_threshold, ' \']
            - !concat ['   -b ', *sppdcj_ilp_input_beta, ' \']
            - !concat ['   ', *sppdcj_ilp_input_file_species_tree, ' \']
            - !concat ['   ', *sppdcj_ilp_input_file_adjacencies]
