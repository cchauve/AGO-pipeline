## Reconstruting ancestral gene orders of the X chromosome of Anopheles mosquito genomes
run:
   # Run name
   - &run_name            'anopheles_X_GeneRax'
   # Root directory created by cloning the AGO pipline github repo
   - &run_dir_root        '/home/chauvec/projects/ctb-chauvec/AGO-pipeline'
   # VectorBase data
   - &run_vectorbase_data !join [*run_dir_root, 'data', 'VectorBase']
   # Directory containing the AGO pipeline scripts
   - &run_dir_scripts     !join [*run_dir_root, 'scripts']
   # Directory containing all files created by the AGO pipeline
   - &run_dir_exp         !join ['/home/chauvec/projects/ctb-chauvec/AGO-pipeline', 'example', *run_name]
   # Directory containing local installations of external tools
   - &run_dir_bin         !join [*run_dir_root, 'bin']
slurm:
   # Local account used to run slurm jobs
   account: &slurm_account 'def-chauvec'
dir:
   # Directory containing the input used by AGO and the output files created by AGO
   data:    &dir_data    !join [*run_dir_exp, 'data']
   # Directory containing the input files and running scripts for each external tool
   aux:     &dir_aux     !join [*run_dir_exp, 'aux']
   # Directory containing the log files of external tools and the AGO log files
   log:     &dir_log     !join [*run_dir_exp, 'log']
   # Directory containing the statistics files created by AGO
   stats:   &dir_stats   !join [*run_dir_exp, 'statistics']
   # Directory containing the results of external tools
   results: &dir_results !join [*run_dir_exp, 'results']
data:
   # Paths to starting (extisting data) input files
   species_tree:
      path: &data_species_tree_path      !join [*run_vectorbase_data, 'species_tree_4.newick']
   species:
      path: &data_species_path           !join [*run_vectorbase_data, 'species_4.txt']
   families:
      path: &data_families_path          !join [*run_vectorbase_data, 'families_X_4.txt']
      sep:  &species_gene_name_separator '|'
   gene_orders:
      path: &data_gene_orders_path       !join [*run_vectorbase_data, 'gene_orders_X_4.txt']
   sequences:
      path: &data_sequences_path         !join [*run_vectorbase_data, 'sequences_X_4.txt']
   # Paths to computed output files (generated data, no gene trees)
   alignments:
      path: &data_alignments_path        !join [*dir_data, 'alignments_X.txt']
      NT_ext: &data_alignments_NT_ext    '_NT.fasta'
      AA_ext: &data_alignments_AA_ext    '_AA.fasta'
      ext:    &data_alignments_ext       !ref [*data_alignments_NT_ext]
   reconciliations:
      path:  &data_reconciliations_path  !join [*dir_data, 'reconciliations_X.txt']
      ext:   &data_reconciliations_ext   '.recphyloxml'
   adjacencies:
      path: &data_adjacencies_path      !join [*dir_data, 'adjacencies_X.txt']
      ext:  &data_adjacencies_ext       '_adjacencies.txt'
   ago_adjacencies:
      path: &data_ago_adjacencies_path  !join [*dir_data, 'adjacencies_ago_X.txt']
      ext:  &data_ago_adjacencies_ext   !ref [*data_adjacencies_ext]
# External tools options
tools:
   # ----------------------------------------------------------------------------------------------------
   # -- MACSE (https://bioweb.supagro.inra.fr/macse/)
   # Java is loaded as a module, each slurm process requires 8Go of memory and is allocated 2 hours of running time
   - &macse_exec                     !join [*run_dir_bin, 'macse_v2.06.jar']
   - &macse_modules                  'java'
   - &macse_slurm_options            '--mem=8G --time=02:00:00'
   # ----------------------------------------------------------------------------------------------------
   # GeneRax (https://github.com/BenoitMorel/GeneRax)
   # GeneRax is run using its MPI options, each slurm job is allocated 4Go of memory and 12 hours of computation time
   # in the undated Duplication-Loss (DL) model and GTR+G sequence evolution model
   # See https://github.com/BenoitMorel/GeneRax/wiki/GeneRax for a description of the other GeneRax options
   - &generax_exec                   !concat ['mpiexec -np 48 ', !join [*run_dir_bin, 'GeneRax', 'build', 'bin', 'generax']]
   - &generax_options                '--per-family-rates --si-quartet-support --seed 123 --rec-model UndatedDL --strategy SPR'
   - &generax_alignment_model        'GTR+G'
   - &generax_modules                ''
   - &generax_slurm_options          '--mem-per-cpu=4G --time=12:00:00 --ntasks=100'
   # ----------------------------------------------------------------------------------------------------
   # -- DeCoSTAR (https://github.com/WandrilleD/DeCoSTAR/)
   # DeCoSTAR assumes reconciliations have been computed (input gene trees data file: *data_reconciliations_path; already.reconciled=true)
   # ... parameters dupli.cost, loss.cost irrelevant (set to 0)
   # Ancestral adjacencies computed only for pairs of families with at least on extant adjacency (all.pairs=false)
   # Adjacency gain cost (Again.cost) is 2, adjacency break cost (Abreak.cost) is 1, in mode loss.aware=false (parameter loss.iteration irrelevant)
   # nb.sample=1000 adjacency trees are sampled per adjacency class, with Boltzmann temperature (boltzmann.temperature) 0.1 (will sample mostly parsimonious adjacency forests)
   # Adjacency forests are not written (write.adjacency.trees=false, parameter write.newick irrelevant)
   # See https://github.com/WandrilleD/DeCoSTAR/blob/master/docs/DeCoSTAR.odt for a description of the other DeCoSTAR options
   # (C1.advantage, absence.penalty, dated.species.tree, rooted)
   - &decostar_exec                  !join [*run_dir_bin, 'DeCoSTAR']
   - &decostar_input_path            !ref [*data_reconciliations_path]
   - &decostar_already_reconciled    'true'
   - &decostar_dupli_cost            '0'
   - &decostar_loss_cost             '0'
   - &decostar_again_cost            '2'
   - &decostar_abreak_cost           '1'
   - &decostar_loss_aware            'false'
   - &decostar_loss_iteration        '2'
   - &decostar_c1_advantage          '1'
   - &decostar_all_pairs             'false'
   - &decostar_always_again          'true'
   - &decostar_absence_penalty       '-1'
   - &decostar_dated_species_tree    'true'
   - &decostar_rooted                'true'
   - &decostar_boltzmann_temperature '0.1'
   - &decostar_nb_sample             '1000'
   - &decostar_write_newick          'true'
   - &decostar_write_adjacency_trees 'false'
   - &decostar_modules               ''
   - &decostar_slurm_options         '--mem=4G --time=24:00:00'
   # DeCoSTAR adjacency conflicts statistics are generated for thresholds from 0.1 to 1.0 by steps of 0.1
   - &decostar_stats_thresholds      "0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0"
   # ----------------------------------------------------------------------------------------------------
   # -- SPP-DCJ (https://github.com/danydoerr/spp_dcj)
   # Gurobi is available as a module and is run with an optimality parameter gap (MIPGap) of 5%
   - &sppdcj_gurobi_exec             'gurobi_cl'
   - &sppdcj_gurobi_options          'MIPGap=0.05'
   - &sppdcj_bin_dir                 !join [*run_dir_bin, 'spp_dcj', 'scripts']
   - &sppdcj_writesol_exec           !join [*sppdcj_bin_dir, 'sol2adjacencies.py']
   - &sppdcj_ilp_exec                !join [*sppdcj_bin_dir, 'spp_dcj.py']
   # The spp_dcj input adjacencies are the DeCoSTAR adjacencies of weight at least 0.5
   - &sppdcj_ilp_threshold           '0.5'
   # The spp_dcj objective function combines equally the DCJ distance and the weight of discarded adjacencies
   # (alpha = 0.5) and a weighting factor for telomeric adjacencies of 0.25 (beta = 0.25, default value defined by alpha/2).
   - &sppdcj_ilp_alpha               '0.5'
   - &sppdcj_ilp_beta                '0.25'
   # All ancestral species are considered in spp_dcj
   - &sppdcj_input_species           'all'
   - &sppdcj_input_suffix            'all'
   - &sppdcj_ilp_modules             ''
   # Gurobi is available as a module
   - &sppdcj_modules                 'gurobi'
   # The MILP creation is allocated 256Go of memory and 12 hours of computation time
   - &sppdcj_ilp_slurm_options       '--mem=256G --time=12:00:00'
   # Solving the MILP with gurobi is allocated 50Go of memory and 12 hours of computation time
   - &sppdcj_slurm_options           '--mem=50G --time=12:00:00'

# DO NOT EDIT
log:
   ext:
      log:  &log_ext_log  '.log'
      err:  &log_ext_err  '.err'
      stat: &log_ext_stat '.csv'
   msg:
      success: &log_msg_success 'SUCCESS'
      error:   &log_msg_error   'ERROR'
      warning: &log_msg_warning 'WARNING'
      missing: &log_msg_missing 'file is missing'

tools:
   # DO NOT EDIT
   # MACSE: multiple sequences alignment
   MACSE:
      name: &macse_name 'MACSE'
      input:
         files:
            - &macse_input_file !ref [*data_sequences_path]
      output:
         file: &macse_output_file !ref [*data_alignments_path]
      slurm:
         options: !ref [*macse_slurm_options]
         modules: !ref [*macse_modules]
         array:
            input:
               file:  &macse_slurm_array_input_file  !ref [*macse_input_file]
               field: &macse_slurm_array_input_field 2
               var:   &macse_slurm_array_input_var   'SEQ_FILE'
               name:  &macse_slurm_array_input_name  !concat ['${', *macse_slurm_array_input_var, '}']
            results:
               file:  &macse_slurm_array_results_file  !ref [*macse_input_file]
               field: &macse_slurm_array_results_field 1
               var:   &macse_slurm_array_results_var   'FAM_ID'
               name:  &macse_slurm_array_results_name  !concat ['${', *macse_slurm_array_results_var, '}']
               ext:   &macse_slurm_array_results_ext   !ref [*data_alignments_ext]
         results:
            dirs:
               - &macse_results_dir  !join [*dir_results, *macse_name]
            names:
               - &macse_slurm_results_file_1_name !concat [*macse_slurm_array_results_name, *data_alignments_NT_ext]
               - &macse_slurm_results_file_2_name !concat [*macse_slurm_array_results_name, *data_alignments_AA_ext]
            files:
               - &macse_slurm_results_file_1 !join [*macse_results_dir, *macse_slurm_results_file_1_name]
               - &macse_slurm_results_file_2 !join [*macse_results_dir, *macse_slurm_results_file_2_name]
         cmd:
            - !concat ['java -jar ', *macse_exec, ' \']
            - '   -prog alignSequences \'
            - !concat ['   -seq ', *macse_slurm_array_input_name, ' \']
            - !concat ['   -out_NT ', *macse_slurm_results_file_1, ' \']
            - !concat ['   -out_AA ', *macse_slurm_results_file_2]
            - !concat [' ']
            - !concat ["sed -i 's/!/-/g' ",*macse_slurm_results_file_1]
            - !concat ["sed -i 's/?/-/g' ",*macse_slurm_results_file_1]
            - !concat ["sed -i 's/!/-/g' ",*macse_slurm_results_file_2]
            - !concat ["sed -i 's/?/-/g' ",*macse_slurm_results_file_2]

   # DO NOT EDIT
   # GeneRax: computing reconciled gene trees
   GeneRax:
      name: &generax_name 'GeneRax'
      input:
         dirs:
            - &generax_input_dir  !join [*dir_aux, *generax_name]
         files:
            - &generax_input_file !join [*generax_input_dir, 'families.txt']
         script:
            - !join [*run_dir_scripts, 'GeneRax_create_input_files.py']
            - !ref [*data_families_path]
            - !ref [*data_gene_orders_path]
            - !ref [*data_alignments_path]
            - !ref [*data_alignments_NT_ext]
            - !ref [*generax_alignment_model]
            - !ref [*generax_input_file]
            - !ref [*generax_input_dir]
      output:
         file:  &generax_output_file !ref [*data_reconciliations_path]
      slurm:
         options: !ref [*generax_slurm_options] 
         modules: !ref [*generax_modules]
         array:
            results:
               file:  &generax_slurm_array_results_file  !ref [*data_alignments_path]
               field: &generax_slurm_array_results_field 1
               var:   &generax_slurm_array_results_var   'FAM_ID'
               name:  &generax_slurm_array_results_name  !concat ['${', *generax_slurm_array_results_var, '}']
         results:
            dirs:
               - &generax_results_dir !join [*dir_results, *generax_name]
            names:
               - &generax_slurm_results_file_name !concat [*generax_slurm_array_results_name, *data_reconciliations_ext]
            files: 
               - &generax_slurm_results_file !join [*generax_results_dir, 'reconciliations', *generax_slurm_results_file_name]
         cmd:
            - !concat [*generax_exec, ' \']
            - !concat ['   -f ', *generax_input_file, ' \']
            - !concat ['   -s ', *data_species_tree_path, ' \']
            - !concat ['   -p ', *generax_results_dir, ' \']
            - !concat ['   ', *generax_options]
            - ' '
            - !concat [!join [*run_dir_scripts, 'GeneRax_reformat.py'], ' \']
            - !concat ['   ', *generax_input_file, ' \']
            - !concat ['   ', *generax_results_dir, ' \']
            - !concat ['   ', *data_reconciliations_ext]
      stats:
         names:
            - &generax_stats_file_species_name  !concat [*generax_name, '_species', *log_ext_stat]
            - &generax_stats_file_families_name !concat [*generax_name, '_families', *log_ext_stat]
         files:
            - &generax_stats_file_species  !join [*dir_stats, *generax_name, *generax_stats_file_species_name]
            - &generax_stats_file_families !join [*dir_stats, *generax_name, *generax_stats_file_families_name]
         cmd:
            - !join [*run_dir_scripts, 'recPhyloXML_statistics.py']
            - !ref [*generax_output_file]
            - !ref [*generax_stats_file_species]
            - !ref [*generax_stats_file_families]

   # DO NOT EDIT
   # DeCoSTAR: computing ancestral adjacencies
   DeCoSTAR:
      name: &decostar_name 'DeCoSTAR'
      input:
         dirs:
           - &decostar_input_dir !join [*dir_aux, *decostar_name]
         files:
           - &decostar_input_file_trees       !join [*decostar_input_dir, 'gene_trees.txt']
           - &decostar_input_file_adjacencies !join [*decostar_input_dir, 'adjacencies.txt']
         script:
            - !join [*run_dir_scripts, 'DeCoSTAR_create_input_files.py']
            - !ref [*data_gene_orders_path]
            - !ref [*decostar_input_path]
            - !ref [*data_families_path]
            - !ref [*decostar_input_file_adjacencies]
            - !ref [*decostar_input_file_trees]
      output:
         file: &decostar_output_file !ref [*data_adjacencies_path]
      slurm:
         options: !ref [*decostar_slurm_options]
         modules: !ref [*decostar_modules]
         array:
            results:
               file:  &decostar_slurm_array_results_file  !ref [*data_species_path]
               field: &decostar_slurm_array_results_field 1
               var:   &decostar_slurm_array_results_var   'SPECIES'
               name:  &decostar_slurm_array_results_name  !concat ['${', *decostar_slurm_array_results_var, '}']
               ext:   &decostar_slurm_array_results_ext   !ref [*data_adjacencies_ext]
         results:
            dirs:
               - &decostar_results_dir !join [*dir_results, *decostar_name]
            names:
               - &decostar_slurm_results_species_adjacencies_name !concat [*decostar_slurm_array_results_name, *decostar_slurm_array_results_ext]
            files:
               - &decostar_slurm_results_species_adjacencies !join [*decostar_results_dir, *decostar_slurm_results_species_adjacencies_name]
            other:
               - &decostar_slurm_results_adjacencies_file !join [*decostar_results_dir, 'adjacencies.txt']
               - &decostar_slurm_results_genes_file_1     !join [*decostar_results_dir, 'genes.txt']
               - &decostar_slurm_results_genes_file_2     !join [*decostar_results_dir, 'genes_reformatted.txt']
               - &decostar_slurm_results_species_file     !join [*decostar_results_dir, 'species.txt']
         cmd:
            - !concat [*decostar_exec, ' \']
            # Input files
            - !concat ['   species.file=', *data_species_tree_path, ' \']
            - !concat ['   adjacencies.file=', *decostar_input_file_adjacencies, ' \']
            - !concat ['   gene.distribution.file=', *decostar_input_file_trees, ' \']
            # Output
            - !concat ['   output.dir=', *decostar_results_dir, ' \']
            - !concat ['   write.newick=', *decostar_write_newick, ' \']
            - !concat ['   write.adjacency.trees=', *decostar_write_adjacency_trees, ' \']
            # Model
            - !concat ['   already.reconciled=', *decostar_already_reconciled, ' \']
            - !concat ['   rooted=', *decostar_rooted, ' \']
            - !concat ['   nb.sample=', *decostar_nb_sample, ' \']
            - !concat ['   dupli.cost=', *decostar_dupli_cost, ' \']
            - !concat ['   loss.cost=', *decostar_loss_cost, ' \']
            - !concat ['   AGain.cost=', *decostar_again_cost, ' \']
            - !concat ['   ABreak.cost=', *decostar_abreak_cost, ' \']
            - !concat ['   Loss.aware=', *decostar_loss_aware, ' \']
            - !concat ['   Loss.iteration=', *decostar_loss_iteration, ' \']
            - !concat ['   C1.Advantage=', *decostar_c1_advantage, ' \']
            - !concat ['   all.pair.equivalence.class=', *decostar_all_pairs, ' \']
            - !concat ['   always.AGain=', *decostar_always_again, ' \']
            - !concat ['   absence.penalty=', *decostar_absence_penalty, ' \']
            - !concat ['   all.pair.equivalence.class=', *decostar_all_pairs, ' \']
            - !concat ['   boltzmann.temperature=', *decostar_boltzmann_temperature, ' \']
            - '   write.adjacencies=true \'
            - '   write.genes=true \'
            - '   use.boltzmann=true \'
            - '   char.sep="|" \'
            - '   with.transfer=false \'
            - '   verbose=2'
            - ' '
            - !concat [!join [*run_dir_scripts, 'DeCoSTAR_reformat.py'], ' \']
            - !concat ['   ', *data_species_path, ' \']
            - !concat ['   ', *decostar_slurm_results_species_file, ' \']
            - !concat ['   ', *decostar_already_reconciled, ' \']
            - !concat ['   ', *data_families_path, ' \']
            - !concat ['   ', *decostar_input_path, ' \']
            - !concat ['   ', *decostar_input_file_trees, ' \']
            - !concat ['   ', *decostar_slurm_results_genes_file_1, ' \']
            - !concat ['   ', *decostar_slurm_results_adjacencies_file, ' \']
            - !concat ['   ', *decostar_slurm_results_genes_file_2, ' \']
            - !concat ['   ', *decostar_results_dir]
      stats:
         names:
            - &decostar_stats_file_species_name !concat [*decostar_name, *log_ext_stat]
         files:
            - &decostar_stats_file_species !join [*dir_stats, *decostar_name, *decostar_stats_file_species_name]
         cmd:
            - !join [*run_dir_scripts, 'DeCoSTAR_statistics.py']
            - !ref [*data_species_path]
            - !ref [*decostar_slurm_results_genes_file_2]
            - !ref [*data_adjacencies_path]
            - !ref [*decostar_stats_thresholds]
            - !ref [*decostar_stats_file_species]

   # DO NOT EDIT
   # SPPDCJ_ILP: Writing the SPPDCJ ILP file
   SPPDCJ_ILP:
      name:   &sppdcj_ilp_name 'SPPDCJ_ILP'
      input:
         dirs:
            - &sppdcj_ilp_input_dir !join [*dir_aux, *sppdcj_ilp_name]
         names:
            - &sppdcj_ilp_input_file_species_tree_name  !concat ['species_tree_', *sppdcj_input_suffix, '.txt']
            - &sppdcj_ilp_input_file_adjacencies_1_name !concat ['adjacencies_', *sppdcj_input_suffix, '.txt']
            - &sppdcj_ilp_input_file_adjacencies_2_name !concat ['adjacencies_complemented_', *sppdcj_input_suffix, '.txt']
            - &sppdcj_ilp_input_file_conflicts_name     !concat ['conflicts_', *sppdcj_input_suffix, '.txt']
            - &sppdcj_ilp_input_file_log_name           !concat ['adjacencies_', *sppdcj_input_suffix, '.log']
         files:
            - &sppdcj_ilp_input_file_species_tree   !join [*sppdcj_ilp_input_dir, *sppdcj_ilp_input_file_species_tree_name]
            - &sppdcj_ilp_input_file_adjacencies_1  !join [*sppdcj_ilp_input_dir, *sppdcj_ilp_input_file_adjacencies_1_name]
            - &sppdcj_ilp_input_file_adjacencies_2  !join [*sppdcj_ilp_input_dir, *sppdcj_ilp_input_file_adjacencies_2_name]
            - &sppdcj_ilp_input_file_conflicts      !join [*sppdcj_ilp_input_dir, *sppdcj_ilp_input_file_conflicts_name]
            - &sppdcj_ilp_input_file_log            !join [*sppdcj_ilp_input_dir, *sppdcj_ilp_input_file_log_name]
         script:
            - !join [*run_dir_scripts, 'SPPDCJ_create_input_files.py']
            - !ref [*data_adjacencies_path]
            - !ref [*data_species_tree_path]
            - !ref [*sppdcj_input_species]
            - !ref [*sppdcj_ilp_threshold]
            - !ref [*sppdcj_ilp_input_file_species_tree]
            - !ref [*sppdcj_ilp_input_file_adjacencies_1]
            - !concat [';']
            - !join [*run_dir_scripts, 'SPPDCJ_make_linearizable.py']
            - !ref [*sppdcj_ilp_input_file_adjacencies_1]
            - !ref [*sppdcj_ilp_input_file_adjacencies_2]
            - !ref [*sppdcj_ilp_input_file_log]
            - !concat [';']
            - !join [*run_dir_scripts, 'DeCoSTAR_statistics.py']
            - !ref [*data_species_path]
            - !ref [*decostar_slurm_results_genes_file_2]
            - !ref [*data_adjacencies_path]
            - !ref [*sppdcj_ilp_threshold]
            - !ref [*sppdcj_ilp_input_file_conflicts]

      slurm:
         options: !ref [*sppdcj_ilp_slurm_options]
         modules: !ref [*sppdcj_ilp_modules]
         results:
            dirs:
               - &sppdcj_ilp_results_dir  !join [*dir_results, *sppdcj_ilp_name]
            names:
               - &sppdcj_results_prefix !concat [
                    *sppdcj_input_suffix, '_', *sppdcj_ilp_threshold, '_',
                    *sppdcj_ilp_alpha, '_', *sppdcj_ilp_beta
                 ]
               - &sppdcj_ilp_results_file_idmap_name !concat [*sppdcj_results_prefix, '.idmap']
               - &sppdcj_ilp_results_file_ilp_name   !concat [*sppdcj_results_prefix, '.ilp']
            other:
               - &sppdcj_ilp_results_file_idmap !join [*sppdcj_ilp_results_dir, *sppdcj_ilp_results_file_idmap_name]
               - &sppdcj_ilp_results_file_ilp   !join [*sppdcj_ilp_results_dir, *sppdcj_ilp_results_file_ilp_name]
         cmd:
            - !concat [*sppdcj_ilp_exec, ' \']
            - !concat ['   -m ', *sppdcj_ilp_results_file_idmap, ' \']
            - !concat ['   -a ', *sppdcj_ilp_alpha, ' \']
            - !concat ['   -b ', *sppdcj_ilp_beta, ' \']
            - !concat ['   -t ', ' \']
            - !concat ['   ', *sppdcj_ilp_input_file_species_tree, ' \']
            - !concat ['   ', *sppdcj_ilp_input_file_adjacencies_2, ' \']
            - !concat ['   > ', *sppdcj_ilp_results_file_ilp ]

      stats:
         dirs:
            - &sppdcj_ilp_stats_dir !join [*dir_stats, *sppdcj_ilp_name]
         names:
            - &sppdcj_ilp_stats_file_log_name !concat ['components_', *sppdcj_input_suffix, '.log']
         files:
            - &sppdcj_ilp_stats_file_log !join [*sppdcj_ilp_stats_dir, *sppdcj_ilp_stats_file_log_name]
         cmd:
            - !join [*run_dir_scripts, 'SPPDCJ_adjs_to_components.py']
            - '-p'
            - '-o'
            - !ref [*sppdcj_ilp_stats_dir]
            - !ref [*sppdcj_ilp_input_file_adjacencies_2]
            - !ref [*sppdcj_ilp_stats_file_log]

   # SPPDCJ: Solving the SPPDCJ ILP
   SPPDCJ:
      name:   &sppdcj_name 'SPPDCJ'
      input:
         files:
            - &sppdcj_input_file_ilp   !ref [*sppdcj_ilp_results_file_ilp]
            - &sppdcj_input_file_idmap !ref [*sppdcj_ilp_results_file_idmap]
      output:
           file: &sppdcj_output_file !ref [*data_ago_adjacencies_path]
      slurm:
         options: !ref [*sppdcj_slurm_options]
         modules: !ref [*sppdcj_modules]
         array:
            results:
               file:  &sppdcj_slurm_array_results_file  !ref [*data_species_path]
               field: &sppdcj_slurm_array_results_field 1
               var:   &sppdcj_slurm_array_results_var   'SPECIES'
               name:  &sppdcj_slurm_array_results_name !concat ['${', *sppdcj_slurm_array_results_var, '}']
               ext:   &sppdcj_slurm_array_results_ext  !ref [*data_ago_adjacencies_ext]
         results:
            dirs:
               - &sppdcj_results_dir  !join [*dir_results, *sppdcj_name]
            names: 
               - &sppdcj_slurm_results_file_name       !concat [*sppdcj_slurm_array_results_name, *sppdcj_slurm_array_results_ext]
               - &sppdcj_results_file_sol_name         !concat [*sppdcj_results_prefix, '.sol']
               - &sppdcj_results_file_log_name         !concat [*sppdcj_results_prefix, '.log']
               - &sppdcj_results_file_adjacencies_name !concat [*sppdcj_results_prefix, *data_ago_adjacencies_ext]
            files: 
               - &sppdcj_slurm_results_file !join [*sppdcj_results_dir, *sppdcj_slurm_results_file_name]
            other:
               - &sppdcj_results_file_sol         !join [*sppdcj_results_dir, *sppdcj_results_file_sol_name]
               - &sppdcj_results_file_log         !join [*sppdcj_results_dir, *sppdcj_results_file_log_name]
               - &sppdcj_results_file_adjacencies !join [*sppdcj_results_dir, *sppdcj_results_file_adjacencies_name]
         cmd:
            - !concat [*sppdcj_gurobi_exec, ' \']
            - !concat ['   ', *sppdcj_gurobi_options, ' \']
            - !concat ['   ResultFile=', *sppdcj_results_file_sol, ' \']
            - !concat ['   ', *sppdcj_input_file_ilp, ' \']
            - !concat ['   > ', *sppdcj_results_file_log]
            - ' '
            - !concat [*sppdcj_writesol_exec, ' \']
            - !concat ['   ', *sppdcj_results_file_sol, ' \']
            - !concat ['   ', *sppdcj_input_file_idmap, ' \']
            - !concat ['   > ', *sppdcj_results_file_adjacencies]
            - ' '
            - !concat [!join [*run_dir_scripts, 'SPPDCJ_reformat.py'], ' \']
            - !concat ['   ', *data_adjacencies_path, '\']
            - !concat ['   ', *sppdcj_results_file_adjacencies, ' \']
            - !concat ['   ', *sppdcj_results_dir]
      stats:
         names:
            - &sppdcj_stats_file_name !concat [*sppdcj_name, '_species', *log_ext_stat]
         files:
            - &sppdcj_stats_file !join [*dir_stats, *sppdcj_name, *sppdcj_stats_file_name]
         cmd:
            - !join [*run_dir_scripts, 'SPPDCJ_statistics.py']
            - !ref [*data_adjacencies_path]
            - !ref [*sppdcj_results_file_adjacencies]
            - !ref [*sppdcj_stats_file]

